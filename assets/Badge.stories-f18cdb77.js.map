{"version":3,"file":"Badge.stories-f18cdb77.js","sources":["../../src/components/ui/Badge/Badge.vue"],"sourcesContent":["<script>\nexport default {\n    inheritAttrs: false,\n}\n</script>\n<script setup>\nimport { computed, ref as refs, useAttrs, useSlots } from 'vue'\nimport classNames from 'classnames'\n\nconst props = defineProps({\n    content: [String, Number],\n    badgeClass: String,\n    innerClass: String,\n    badgeStyle: {\n        type: Object,\n        default: () => ({}),\n    },\n    maxCount: {\n        type: Number,\n        default: 99,\n    },\n})\nconst { class: className, ...restAttrs } = useAttrs()\nconst slots = useSlots()\n\nconst dot = computed(() => typeof props.content !== 'number' && typeof props.content !== 'string')\nconst badgeClass = classNames(dot.value ? 'badge-dot' : 'badge', props.innerClass)\nconst ref = refs()\n\ndefineExpose({ ref })\n</script>\n\n<template>\n    <span v-if=\"slots.default\" v-bind=\"restAttrs\" ref=\"ref\" :class=\"classNames('badge-wrapper', className)\">\n        <span :class=\"classNames(badgeClass, 'badge-inner')\" :style=\"badgeStyle\">\n            {{ typeof content === 'number' && content > maxCount ? `${maxCount}+` : content }}\n        </span>\n        <slot />\n    </span>\n    <span v-else ref=\"ref\" :class=\"classNames(badgeClass, className)\" :style=\"badgeStyle\" v-bind=\"restAttrs\">\n        {{ content }}\n    </span>\n</template>\n"],"names":["__default__","className","restAttrs","useAttrs","slots","useSlots","dot","computed","props","badgeClass","classNames","ref","refs","__expose"],"mappings":"qNACA,MAAAA,EAAe,CACX,aAAc,oNAoBZ,CAAE,MAAOC,EAAW,GAAGC,CAAW,EAAGC,EAAQ,EAC7CC,EAAQC,IAERC,EAAMC,EAAS,IAAM,OAAOC,EAAM,SAAY,UAAY,OAAOA,EAAM,SAAY,QAAQ,EAC3FC,EAAaC,EAAWJ,EAAI,MAAQ,YAAc,QAASE,EAAM,UAAU,EAC3EG,EAAMC,IAEZ,OAAAC,EAAa,CAAA,IAAEF,CAAG,CAAE;;;;;;;;"}