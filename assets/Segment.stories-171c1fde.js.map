{"version":3,"file":"Segment.stories-171c1fde.js","sources":["../../src/components/ui/Segment/Segment.vue"],"sourcesContent":["<template>\n    <div :class=\"classNames('segment', className)\" v-bind=\"restAttrs\">\n        <slot />\n    </div>\n</template>\n<script>\nexport default {\n    inheritAttrs: false,\n}\n</script>\n<script setup>\nimport { inject, provide, useAttrs, ref as reference, computed } from 'vue'\nimport { DEFAULT_CONFIG, SELECTION_TYPE } from '../utils/constant'\nimport classNames from 'classnames'\n\nconst props = defineProps({\n    modelValue: [Array, String],\n    selectionType: {\n        type: String,\n        default: SELECTION_TYPE.SINGLE,\n        validator(value) {\n            return [SELECTION_TYPE.SINGLE, SELECTION_TYPE.MULTIPLE].includes(value)\n        },\n    },\n    size: String,\n})\n\nconst emits = defineEmits(['update:modelValue'])\n\nconst { class: className, ...restAttrs } = useAttrs()\n\nconst formControlSize = inject('form', {})?.size\nconst inputGroupSize = inject('inputGroup', {})?.size\nconst { controlSize } = inject('config', DEFAULT_CONFIG)\nconst selectedValue = reference(props.modelValue)\n\nconst onActive = (itemValue) => {\n    selectedValue.value = itemValue\n    emits('update:modelValue', selectedValue.value)\n}\n\nconst onDeactivate = (itemValue) => {\n    if (props.selectionType === SELECTION_TYPE.MULTIPLE) {\n        selectedValue.value = selectedValue.value.filter((val) => val !== itemValue)\n        emits('update:modelValue', selectedValue.value)\n    }\n}\n\nconst segmentValue = computed(() => {\n    if (props.selectionType === SELECTION_TYPE.SINGLE) {\n        if (props.modelValue && typeof props.modelValue === 'string') {\n            return [props.modelValue]\n        }\n\n        if (props.modelValue && Array.isArray(props.modelValue)) {\n            return props.modelValue\n        }\n        return []\n    } else {\n        return props.modelValue ?? []\n    }\n})\nprovide('segment', {\n    value: segmentValue,\n    onActive,\n    onDeactivate,\n    selectionType: props.selectionType,\n    size: computed(() => props.size || inputGroupSize || formControlSize || controlSize),\n})\n</script>\n"],"names":["__default__","className","restAttrs","useAttrs","formControlSize","_a","inject","inputGroupSize","_b","controlSize","DEFAULT_CONFIG","selectedValue","reference","props","onActive","itemValue","emits","onDeactivate","SELECTION_TYPE","val","segmentValue","computed","provide"],"mappings":"kPAMA,MAAAA,EAAe,CACX,aAAc,yPAsBZ,CAAE,MAAOC,EAAW,GAAGC,CAAW,EAAGC,EAAQ,EAE7CC,GAAkBC,EAAAC,EAAO,OAAQ,CAAE,CAAA,IAAjB,YAAAD,EAAoB,KACtCE,GAAiBC,EAAAF,EAAO,aAAc,CAAE,CAAA,IAAvB,YAAAE,EAA0B,KAC3C,CAAE,YAAAC,CAAa,EAAGH,EAAO,SAAUI,CAAc,EACjDC,EAAgBC,EAAUC,EAAM,UAAU,EAE1CC,EAAYC,GAAa,CAC3BJ,EAAc,MAAQI,EACtBC,EAAM,oBAAqBL,EAAc,KAAK,CAClD,EAEMM,EAAgBF,GAAa,CAC3BF,EAAM,gBAAkBK,EAAe,WACvCP,EAAc,MAAQA,EAAc,MAAM,OAAQQ,GAAQA,IAAQJ,CAAS,EAC3EC,EAAM,oBAAqBL,EAAc,KAAK,EAEtD,EAEMS,EAAeC,EAAS,IACtBR,EAAM,gBAAkBK,EAAe,OACnCL,EAAM,YAAc,OAAOA,EAAM,YAAe,SACzC,CAACA,EAAM,UAAU,EAGxBA,EAAM,YAAc,MAAM,QAAQA,EAAM,UAAU,EAC3CA,EAAM,WAEV,GAEAA,EAAM,YAAc,EAElC,EACD,OAAAS,EAAQ,UAAW,CACf,MAAOF,EACP,SAAAN,EACA,aAAAG,EACA,cAAeJ,EAAM,cACrB,KAAMQ,EAAS,IAAMR,EAAM,MAAQN,GAAkBH,GAAmBK,CAAW,CACtF,CAAA;;;;;;;;;;"}