{"version":3,"file":"Input-a0010c67.js","sources":["../../src/components/ui/Input/Input.vue"],"sourcesContent":["<template>\n    <textarea\n        v-if=\"textArea\"\n        ref=\"inputRef\"\n        v-bind=\"inputProps\"\n        :disabled=\"disabled\"\n        :value=\"modelValue ?? value\"\n        :style=\"style\"\n        v-on=\"events\"\n    ></textarea>\n    <span v-else-if=\"(slots?.prefix || slots?.suffix) && !textArea\" :class=\"inputWrapperClass\">\n        <div v-if=\"slots?.prefix\" ref=\"prefixNode\" class=\"input-suffix-start\">\n            <slot name=\"prefix\" />\n        </div>\n        <component\n            :is=\"asElement\"\n            ref=\"inputRef\"\n            v-bind=\"inputProps\"\n            :value=\"modelValue ?? value\"\n            :disabled=\"disabled\"\n            :style=\"{ ...affixGutterStyle, ...style }\"\n            v-on=\"events\"\n        >\n            <slot />\n        </component>\n        <div v-if=\"slots?.suffix\" ref=\"suffixNode\" class=\"input-suffix-end\">\n            <slot name=\"suffix\" />\n        </div>\n    </span>\n    <component\n        :is=\"asElement\"\n        v-else\n        ref=\"inputRef\"\n        v-bind=\"inputProps\"\n        :disabled=\"disabled\"\n        :value=\"modelValue ?? value\"\n        :style=\"{ ...affixGutterStyle, ...style }\"\n        v-on=\"events\"\n    >\n        <slot />\n    </component>\n</template>\n<script setup>\nimport { CONTROL_SIZES, DEFAULT_CONFIG, SIZES } from '../utils/constant'\nimport { computed, inject, onMounted, ref, useAttrs, useSlots } from 'vue'\nimport { get, isEmpty, isNil } from 'lodash'\nimport classNames from 'classnames'\n\nconst props = defineProps({\n    asElement: {\n        type: String,\n        default: 'input',\n    },\n    type: {\n        type: String,\n        default: 'text',\n    },\n    size: {\n        type: String,\n        validator(value) {\n            return [SIZES.LG, SIZES.SM, SIZES.MD].includes(value)\n        },\n    },\n    invalid: Boolean,\n    placeholder: String,\n    modelValue: [String, Number, Date],\n    value: [String, Number, Date],\n    unstyle: Boolean,\n    disabled: Boolean,\n    form: Object,\n    field: Object,\n})\n\ndefineOptions({\n    inheritAttrs: false,\n})\n\nconst { class: className, style, ...restAttrs } = useAttrs()\n\nconst emits = defineEmits(['update:modelValue', 'focus', 'blur', 'change', 'keydown', 'click', 'keyup', 'input'])\n\nconst events = {\n    click: (e) => emits('click', e),\n    keydown: (e) => emits('keydown', e),\n    keyup: (e) => emits('keyup', e),\n    focus: (e) => emits('focus', e),\n    blur: (e) => emits('blur', e),\n    input: (event) => {\n        emits('update:modelValue', event.target.value)\n        emits('input', event)\n    },\n    change: (e) => emits('change', e),\n}\n\nconst prefixGutter = ref(0)\nconst suffixGutter = ref(0)\nconst { themeColor, controlSize, primaryColorLevel, direction } = inject('config', DEFAULT_CONFIG)\nconst formControlSize = inject('form', {})?.size\nconst inputGroupSize = inject('inputGroup', {})?.size\nconst inputSize = computed(() => props.size || inputGroupSize || formControlSize || controlSize)\n\nconst textArea = computed(() => props.type === 'textarea')\n\nconst isInvalid = computed(() => {\n    let validate = false\n    if (!isEmpty(props.form)) {\n        const { touched, errors } = props.form\n        const touchedField = get(touched, props.field.name)\n        const errorField = get(errors, props.field.name)\n        validate = touchedField && errorField\n    }\n    if (typeof props.invalid === 'boolean') {\n        validate = props.invalid\n    }\n    return validate\n})\n\nconst slots = useSlots()\n\nconst inputDefaultClass = 'input'\nconst inputSizeClass = computed(() => `input-${inputSize.value} h-${CONTROL_SIZES[inputSize.value]}`)\nconst inputFocusClass = computed(\n    () =>\n        `focus:ring-${themeColor}-${primaryColorLevel} focus-within:ring-${themeColor}-${primaryColorLevel} focus-within:border-${themeColor}-${primaryColorLevel} focus:border-${themeColor}-${primaryColorLevel}`\n)\nconst inputWrapperClass = computed(() => `input-wrapper ${props.prefix || props.suffix ? className : ''}`)\nconst inputClass = computed(() =>\n    classNames(\n        inputDefaultClass,\n        !textArea.value && inputSizeClass.value,\n        !isInvalid.value && inputFocusClass.value,\n        !slots.prefix && !slots.suffix ? className : '',\n        props.disabled && 'input-disabled',\n        isInvalid.value && 'input-invalid',\n        textArea.value && 'input-textarea'\n    )\n)\nconst prefixNode = ref(null)\nconst suffixNode = ref(null)\n\nconst getAffixSize = () => {\n    if (!prefixNode.value && !suffixNode.value) return\n\n    const prefixNodeWidth = prefixNode?.value?.offsetWidth\n    const suffixNodeWidth = suffixNode?.value?.offsetWidth\n\n    if (isNil(prefixNodeWidth) && isNil(suffixNodeWidth)) return\n\n    if (prefixNodeWidth) prefixGutter.value = prefixNodeWidth\n\n    if (suffixNodeWidth) suffixGutter.value = suffixNodeWidth\n}\n\nonMounted(() => getAffixSize())\n\nconst remToPxConvertion = (pixel) => 0.0625 * pixel\n\nconst affixGutterStyle = computed(() => {\n    const leftGutter = `${remToPxConvertion(prefixGutter.value) + 1}rem`\n    const rightGutter = `${remToPxConvertion(suffixGutter.value) + 1}rem`\n    const gutterStyle = {}\n\n    if (direction === 'ltr') {\n        if (slots.prefix) {\n            gutterStyle.paddingLeft = leftGutter\n        }\n\n        if (slots.suffix) {\n            gutterStyle.paddingRight = rightGutter\n        }\n    }\n\n    if (direction === 'rtl') {\n        if (slots.prefix) {\n            gutterStyle.paddingRight = leftGutter\n        }\n\n        if (slots.suffix) {\n            gutterStyle.paddingLeft = rightGutter\n        }\n    }\n\n    return gutterStyle\n})\n\nconst inputProps = computed(() => ({\n    className: !props.unstyle ? inputClass.value : '',\n    disabled: props.disabled,\n    type: props.type,\n    placeholder: props.placeholder,\n    ...props.field,\n    ...restAttrs,\n}))\nconst inputRef = ref()\n\ndefineExpose({ prefixNode, suffixNode, focus: () => inputRef.value.focus() })\n</script>\n"],"names":["className","style","restAttrs","useAttrs","events","emits","event","prefixGutter","ref","suffixGutter","themeColor","controlSize","primaryColorLevel","direction","inject","DEFAULT_CONFIG","formControlSize","_a","inputGroupSize","_b","inputSize","computed","props","textArea","isInvalid","validate","isEmpty","touched","errors","touchedField","get","errorField","slots","useSlots","inputSizeClass","CONTROL_SIZES","inputFocusClass","inputWrapperClass","inputClass","classNames","inputDefaultClass","prefixNode","suffixNode","getAffixSize","prefixNodeWidth","suffixNodeWidth","isNil","onMounted","remToPxConvertion","pixel","affixGutterStyle","leftGutter","rightGutter","gutterStyle","inputProps","inputRef","__expose"],"mappings":"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"}